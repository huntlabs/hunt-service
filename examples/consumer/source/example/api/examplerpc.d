module example.api.examplerpc;


// Generated by the gRPC dlang plugin.


import example.api.example;
import std.array;
import grpc;
import google.protobuf;
import hunt.logging;
import core.thread;




class HelloClient
{
	this(Channel channel)
	{
		_channel = channel;
	}

	HelloResponse sayHello( HelloRequest request)
	{
		mixin(CM!(HelloResponse , HelloBase.SERVICE));
	}

	void sayHello( HelloRequest request , void delegate(Status status , HelloResponse response) dele)
	{
		mixin(CMA!(HelloResponse , HelloBase.SERVICE));
	}


	private:
	Channel _channel;
}

class HelloBase: GrpcService
{
	enum SERVICE  = "example.api.Hello";
	string getModule()
	{
		return SERVICE;
	}

	Status sayHello(HelloRequest , ref HelloResponse){ return Status.OK; }

	Status process(string method , GrpcStream stream)
	{
		switch(method)
		{
			mixin(SM!(HelloRequest , HelloResponse , "sayHello"));
			mixin(NONE());
		}
	}
}


